package bloomberg;
import java.math.BigInteger;
import java.util.ArrayList;

public class PowerSet {
	public void sortString(){}
	public void powerSet(String s){
		StringBuilder given = new StringBuilder(s);
		int length = given.length();
		ArrayList<String> list = new ArrayList<String>();
		for(int i = 0;i<length;i++){
			list.add(Character.toString(given.charAt(i)));
		}
		for(int i = 0;i<(Math.pow(2,(double)length));i++){
			// Use the length to check out how many digits we need to create a binary
			StringBuilder number = new StringBuilder(Integer.toBinaryString(i));
			number = number.delete(0, number.length()-length);
			for(int j = 0;j<number.length();j++){
				System.out.print("Entry = ");
				if(number.charAt(j)=='1'){
					System.out.println(s.charAt(j));
					
				}
				System.out.println();
			}
		}
	}
	public static void main(String[] args){
		
	}

}
